#  Loading the Upper wall and measuring the stress in the walls
# -------------------------------------------------------------

# Forces before applying any fixes
fix             fAtomU group_surfU store/force
fix             fAtomU_avg group_surfU ave/atom 10 100 ${thermo_out} f_fAtomU[*]

fix             fAtomL group_surfL store/force
fix             fAtomL_avg group_surfL ave/atom 10 100 ${thermo_out} f_fAtomL[*]

# Lower surface atoms do not experience any force (rigid)
# While the upper walls are loaded with Pext
fix             setforce group_surfU setforce 0.0 0.0 NULL
fix             rigid group_surfL setforce 0.0 0.0 0.0

# Damping force (Tribol Lett (2010) 39:49â€“61)
variable        nU equal count(group_surfU)
variable        massU equal ${nU}*${mSolid}                                     # Mass of Upper wall
variable        scale equal (${massU}/${M_ps})/(4184e-7)                        # real mass/Mass of imaginary piston (Prefactor to convert from kcal to J and fs^2/g.A^2 to J^-1)

compute         velatomU group_surfU property/atom vz
compute         velU group_surfU reduce ave c_velatomU
variable        dampforce equal -${damper}*c_velU                               # Damping Force per atom

variable        atomForceZ equal -${Pext}*lx*ly*${mpa_to_kcalpermolA3}/${nU}+v_dampforce  # Force per atom in Kcal/mol.A = Load+Damper
fix             loadU group_surfU aveforce 0.0 0.0 v_atomForceZ

variable        Fz equal fcm(group_surfU,z)                                  # Total force on the upper surface
variable        fscale equal v_Fz*${scale}/${nU}                             # Fz per atom scaled by mass-ratio
fix             Fscale group_surfU setforce 0.0 0.0 v_fscale                 # set normal force to scaled value (KCal/mol.A)

#compute         fzAtom group_surfU property/atom fz      # This computes the forces after the fixes/damping. It will fluctuate around zero.
