# The simulation file
#--------------------

# Timestep settings
neigh_modify    every 1 delay 0 check yes exclude group group_rigid group_rigid   #  interactions between those atoms can be turned off to save needless computation
timestep        ${timestep}

# Set Zero velocity for solid
velocity        group_solid set 0.0 0.0 0.0
# Integrate the solid atoms in time (Microcanonical ensemble)
fix             nveF group_fluid nve
fix             nveS group_solid nve
# Profile-Biased thermostating
fix             nvt group_vibrating langevin ${temp} ${temp} $(dt*100) 154323 tally yes
compute         tempFluid group_fluid temp
# Ensure that atoms do not drift during the simulation due to random perturbations
if "${couette}==0" then &
"fix             recenter group_surfL recenter INIT INIT INIT shift all"

include         blocks/system.in.loadUpper
include         blocks/system.in.virial

fix             position all ave/atom ${Nevery} ${Nrepeat} ${thermo_out} x y z
fix             velocity all ave/atom ${Nevery} ${Nrepeat} ${thermo_out} vx vy vz
#fix             force all ave/atom ${Nevery} ${Nrepeat} ${thermo_out} fx fy fz

# Modified Biased thermostating (switch off the streaming velocity off)
compute         pbt group_fluid temp/partial 0 1 0
fix_modify      nvt temp pbt                      # exclude the x-velocity component from Temperature computation

# Get the channel thickness
variable        thickness equal (bound(group_pump_dyn,zmax)-bound(group_pump_dyn,zmin)+bound(group_surfU,zmin)-bound(group_surfL,zmax))/2

#-----------ff Ensemble -----------------#

if "${ff}==1 && ${smooth_tr}==0 && ${smooth_gauss}==0" then &
"variable       flowArea equal ly*v_thickness*1e-20" &
"variable       fp equal v_flowArea*${pDiff}" &
"compute        fw group_pump_dyn group/group group_solid" &
"variable       fw equal -(c_fw[1])*${kcalpermolA_to_N}" &
"variable       fpump equal ((v_fw+v_fp)*${N_to_kcalpermolA})/count(group_pump_dyn)" &
"fix            pumpForce group_pump_dyn addforce v_fpump 0.0 0.0" &
"variable       inlet_start equal 0.97*lx" &
"variable       box_end equal lx" &
"variable       outlet_end equal ${pumpEnd}+(0.03*lx)" &
"region         inlet block ${inlet_start} ${box_end} INF INF INF INF units box" &
"region         outlet block ${pumpEnd} ${outlet_end} INF INF INF INF units box" &
"variable       energyAtom atom 0.5*(mass/${N_A})*1e-3*vx*vx*1e10" &
"compute        energy_in group_fluid reduce/region inlet sum v_energyAtom" &
"variable       Fin equal c_energy_in*${N_to_kcalpermolA}/(0.03*lx*1e-10)" &
"compute        energy_out group_fluid reduce/region outlet sum v_energyAtom" &
"variable       Fout equal c_energy_out*${N_to_kcalpermolA}/(0.03*lx*1e-10)" &
"fix            mom_fluxes group_fluid ave/time 1 1 1 v_Fin v_Fout ave window 500000" &
"variable       net_mom_flux equal (f_mom_fluxes[2]-f_mom_fluxes[1])/count(group_pump_dyn)"

#-----------ff Ensemble (Smooth) -----------------#

if "${ff}==1 && ${smooth_tr}==1" then &
"variable       flowArea equal ly*v_thickness*1e-20" &
"variable       fp equal v_flowArea*${pDiff}" &
"compute        fw group_pump_dyn group/group group_solid" &
"variable       fw equal -(c_fw[1])*${kcalpermolA_to_N}" &
"variable       fpump equal ((v_fw+v_fp)*${N_to_kcalpermolA})*(15/8)/count(group_pump_dyn)" &
"compute        xcoord_pump group_pump_dyn property/atom x" &
"variable       xu atom (c_xcoord_pump-0.5*${pumplength})/(0.5*${pumplength})" &
"variable       smoothing atom v_xu^4-2*v_xu^2+1" &
"variable       smoothedF atom v_fpump*v_smoothing" &
"fix            pumpForce group_pump_dyn addforce v_smoothedF 0.0 0.0" &
"variable       inlet_start equal 0.97*lx" &
"variable       box_end equal lx" &
"variable       outlet_end equal ${pumpEnd}+(0.03*lx)" &
"region         inlet block ${inlet_start} ${box_end} INF INF INF INF units box" &
"region         outlet block ${pumpEnd} ${outlet_end} INF INF INF INF units box" &
"variable       energyAtom atom 0.5*(mass/${N_A})*1e-3*vx*vx*1e10" &
"compute        energy_in group_fluid reduce/region inlet sum v_energyAtom" &
"variable       Fin equal c_energy_in*${N_to_kcalpermolA}/(0.03*lx*1e-10)" &
"compute        energy_out group_fluid reduce/region outlet sum v_energyAtom" &
"variable       Fout equal c_energy_out*${N_to_kcalpermolA}/(0.03*lx*1e-10)" &
"fix            mom_fluxes group_fluid ave/time 1 1 1 v_Fin v_Fout ave window 500000" &
"variable       net_mom_flux equal (f_mom_fluxes[2]-f_mom_fluxes[1])/count(group_pump_dyn)"

#-----------fc Ensemble-------------#
if "${fc}==1" then &
"variable       mCH2 equal ${massAtomCH2}*count(group_CH2_pump)" &
"variable       mCH3 equal ${massAtomCH3}*count(group_CH3_pump)" &
"variable       uCOM equal ${mflowrate_imposed}*1e-6*${pumplength}/(v_mCH3+v_mCH2)" &
"velocity       group_fluid zero linear" &
"fix            GD group_pump_dyn flow/pump 1 0 0 v_uCOM 0 0"

#------------Couette flow -----------------#
if "${couette}==1 && ${both}==0" then &
"velocity       group_surfU set NULL NULL NULL" &
"velocity       group_surfL set ${vshear} 0.0 0.0 units box" &
elif "${couette}==1 && ${both}==1" &
"unfix		recenter" &
"variable       vshear_half equal 0.5*${vshear}" &
"velocity       group_surfL set -${vshear_half} 0.0 0.0 units box" &
"velocity       group_surfU set ${vshear_half} 0.0 0.0 units box"

# Thermodynamic Output --------------------------------
if "${ff}==1" then &
"thermo_style    custom step c_tempFluid ke epair etotal density vol press v_nAtomsPump v_fw v_fp v_fpump v_Fin v_Fout v_net_mom_flux" &
else &
"thermo_style    custom step c_tempFluid ke epair etotal density vol press v_nAtomsPump"

thermo          ${thermo_out}
thermo_modify   flush yes

dump            flow all netcdf ${thermo_out} out/flow.nc id type  x y z vx vy vz &
                                                          f_position[1] f_position[2] f_position[3] &
                                                          f_velocity[1] f_velocity[2] f_velocity[3] &
                                                          f_Wi_avg[1] f_Wi_avg[2] f_Wi_avg[3] &
					                                      f_Wi_avg[4] f_Wi_avg[5] f_Wi_avg[6]


run             5000000
write_data	    out/data.stabilize nocoeff

if "${ff}==1" then &
"unfix          pumpForce" &
"variable       total_force equal v_net_mom_flux+v_fpump" &
"fix            mom_flux_force group_pump_dyn addforce v_total_force 0.0 0.0"

run             15000000
write_data      out/data1.flow

run             15000000
write_data      out/data2.flow

run             15000000
write_data      out/data3.flow
